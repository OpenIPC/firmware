--- a/Makefile	2023-01-07 19:48:56.413224458 +0300
+++ b/Makefile	2023-01-07 19:49:02.504236049 +0300
@@ -1,71 +1,123 @@
-#
-#makefile for build Sstar_wifi.ko
-#
-###############################################################################
-#
-# when release to customer ,the CUSTOMER_SUPPORT_USED must set to y!!!!!!!!!!!!!
-#
-###############################################################################
-CUSTOMER_SUPPORT_USED=y
-###############################################################################
-#PLATFORM_SIGMASTAR                           18
-export
-platform ?= PLATFORM_SIGMASTAR
-#Android
-#Linux
-sys ?=Linux
-#arch:arm or arm64
-arch ?= arm
-#export 
-#SSTAR_WIFI__EXT_CCFLAGS = -DSSTAR_WIFI_PLATFORM=$(platform)
-
-MDIR:=
-export MDIR
-
-ifeq ($(CUSTOMER_SUPPORT_USED),y)
-MAKEFILE_SUB ?= Makefile.build.customer
-else
-MAKEFILE_SUB ?= Makefile.build
-endif
-
-ifeq ($(KERNELRELEASE),)
-ifeq ($(platform),PLATFORM_SIGMASTAR)
-ifeq ($(sys),Linux)
-
-CROSS_COMPILE = /home/builder/Work_OpenIPC/openipc-2.1/output/host/bin/arm-openipc-linux-uclibcgnueabihf-
-LINUX_SRC = ~/Work_OpenIPC/openipc-2.1/output/build/linux-4.9.84
-MDIR = ./output
-else
+#############################################################################
+PWD:=$(shell pwd)
+WIFI_INSTALL_DIR := $(PWD)/output
+
+NOSTDINC_FLAGS := -I$(src)/include/ \
+	-include $(src)/include/linux/compat-2.6.h \
+	-DCOMPAT_STATIC
 
+#####################################################
+export
+MODULES_NAME = ssw101b_wifi_usb
+CONFIG_FPGA=n
+CONFIG_1601=n
+CONFIG_1606=n
+CONFIG_APOLLOC=n
+CONFIG_APOLLOD=n
+CONFIG_APOLLOE=n
+CONFIG_ATHENAA=n
+CONFIG_ATHENAB=n
+CONFIG_ATHENAB_24M=n
+CONFIG_ATHENAC=n
+CONFIG_ATHENALITE=n
+CONFIG_ATHENALITE_ECO=n
+CONFIG_ARES=n
+CONFIG_ARESB=y
+CONFIG_HERA=n
+USB_BUS=y
+SPI_BUS=n
+SDIO_BUS=n
+TX_NO_CONFIRM=n
+MULT_NAME=n
+SSTAR_MAKEFILE_SUB=y
+
+LOAD_FW_H=y
+SKB_DEBUG=y
+MEM_DEBUG=y
+BRIDGE=n
+MONITOR=y
+EARLYSUSPEND=n
+CH5G=y
+USBAGGTX=y
+NOTXCONFIRM=y
+USBDMABUFF=y
+USBCMDENHANCE=y
+USBDATAENHANCE=y
+PMRELODDFW=n
+CHECKSUM=n
+CONFIG_NOT_SUPPORT_40M_CHW=n
+##################################################
+#SSTAR6041 only use sdio
+ifeq ($(CONFIG_HERA),y)
+SDIO_BUS=y
+endif
+#CONFIG_SSTAR_APOLLO_DEBUGFS=y
+#####################################################
+export 
+ifeq ($(CONFIG_SSTAR_APOLLO),)
+CONFIG_SSTAR_APOLLO=m
 endif
 export
-arch = arm
+include $(src)/Makefile.build.kernel
+export
 SSTAR_WIFI__EXT_CCFLAGS = -DSSTAR_WIFI_PLATFORM=18
+################### WIRELESS #########################
+ifeq ($(CONFIG_SSTAR_APOLLO_DEBUG),)
+SSTAR_WIFI__EXT_CCFLAGS += -DCONFIG_SSTAR_APOLLO_DEBUG=1
+CONFIG_SSTAR_APOLLO_DEBUG=y
 endif
+#####################################################
 
-ifeq ($(platform),PLATFORM_PCX86)
-all:install
-
-install:
-	@echo "make PLATFORM_PCX86"
-	$(MAKE) all -f Makefile.build.local KDIR=$(LINUX_SRC)
-clean:
-	$(MAKE) -f Makefile.build.local KDIR=$(LINUX_SRC) clean
-else
-all:install
-
-install:
-
-	$(warning, "install operation")
-	#@echo "make PLATFORM_CROSS=$(platform)"
-	$(MAKE) all -f $(MAKEFILE_SUB) ARCH=$(arch)  CROSS_COMPILE=$(CROSS_COMPILE) KDIR=$(LINUX_SRC) SYS=$(sys) PLAT=$(platform) -j8
-clean:
-	$(MAKE) -f $(MAKEFILE_SUB) KDIR=$(LINUX_SRC) ARCH=$(arch) clean
-strip:
-	$(MAKE) -f $(MAKEFILE_SUB) KDIR=$(LINUX_SRC) ARCH=$(arch) SYS=$(sys) PLAT=$(platform) strip
+ifeq ($(CONFIG_MAC80211_DRIVER_API_TRACER),)
+#ccflags-y += -DCONFIG_MAC80211_DRIVER_API_TRACER=1
+# CONFIG_MAC80211_DRIVER_API_TRACER=y
 endif
-else
 export
-include $(src)/Makefile.build.kernel
+ifeq ($(CONFIG_MAC80211_SSTAR_RC_MINSTREL),)
+SSTAR_WIFI__EXT_CCFLAGS += -DCONFIG_MAC80211_SSTAR_RC_MINSTREL=1
+CONFIG_MAC80211_SSTAR_RC_MINSTREL=y
+endif
+ifeq ($(CONFIG_MAC80211_SSTAR_RC_MINSTREL_HT),)
+SSTAR_WIFI__EXT_CCFLAGS += -DCONFIG_MAC80211_SSTAR_RC_MINSTREL_HT=1
+CONFIG_MAC80211_SSTAR_RC_MINSTREL_HT=y
 endif
+#ifeq ($(CONFIG_SSTAR_APOLLO_TESTMODE),)
+#SSTAR_WIFI__EXT_CCFLAGS += -DCONFIG_SSTAR_APOLLO_TESTMODE=1
+#CONFIG_SSTAR_APOLLO_TESTMODE=y
+#endif
 
+ifeq ($(USB_BUS),y)
+HIF:=usb
+endif
+ifeq ($(SDIO_BUS),y)
+HIF:=sdio
+endif
+ifeq ($(SPI_BUS),y)
+HIF:=spi
+endif
+
+all: modules install
+
+modules: clean
+	@echo "arch=$(ARCH)"						
+	$(MAKE) ARCH=$(ARCH) CROSS_COMPILE=$(CROSS_COMPILE) -C $(KDIR) M=$(shell pwd)  modules -j8
+
+strip:
+	$(CROSS_COMPILE)strip $(WIFI_INSTALL_DIR)/$(MODULES_NAME).ko --strip-unneeded
+
+install: modules
+	mkdir -p $(WIFI_INSTALL_DIR)
+	chmod 777 $(WIFI_INSTALL_DIR)
+	cp hal_apollo/*.ko $(WIFI_INSTALL_DIR)
+
+clean:
+	rm -rf hal_apollo/*.o
+	rm -rf hal_apollo/*.ko  
+	rm -rf modules.* Module.* 
+	make -C $(KDIR) M=$(PWD) ARCH=$(ARCH) clean
+
+hal_clean:
+	rm -rf hal_apollo/*.ko
+	rm -rf hal_apollo/*.o
+	rm -rf hal_apollo/*.mod.c
+	rm -rf hal_apollo/*.cmd
