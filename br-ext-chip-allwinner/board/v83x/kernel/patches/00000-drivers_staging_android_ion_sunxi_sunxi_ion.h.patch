diff -drupN a/drivers/staging/android/ion/sunxi/sunxi_ion.h b/drivers/staging/android/ion/sunxi/sunxi_ion.h
--- a/drivers/staging/android/ion/sunxi/sunxi_ion.h	1970-01-01 03:00:00.000000000 +0300
+++ b/drivers/staging/android/ion/sunxi/sunxi_ion.h	2022-06-12 05:28:14.000000000 +0300
@@ -0,0 +1,58 @@
+/*
+ * drivers/staging/android/ion/sunxi/ion_sunxi.h
+ *
+ * Copyright(c) 2015-2020 Allwinnertech Co., Ltd.
+ *      http://www.allwinnertech.com
+ *
+ * Author: Wim Hwang <huangwei@allwinnertech.com>
+ *
+ * sunxi ion header file
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ */
+
+#ifndef _LINUX_ION_SUNXI_H
+#define _LINUX_ION_SUNXI_H
+
+#include "../ion.h"
+
+/**
+ * ion_client_create() -  allocate a client and returns it
+ * @name:	used for debugging
+ */
+struct ion_client *sunxi_ion_client_create(const char *name);
+
+extern struct device *g_ion_dev;
+void sunxi_ion_probe_drm_info(u32 *drm_phy_addr, u32 *drm_tee_addr);
+
+int  optee_probe_drm_configure(
+		unsigned long *drm_base,
+		size_t *drm_size,
+		unsigned long  *tee_base);
+
+struct sunxi_cache_range {
+	long start;
+	long end;
+};
+
+typedef int ion_user_handle_t;
+
+typedef struct {
+	ion_user_handle_t handle;
+	unsigned int phys_addr;
+	unsigned int size;
+} sunxi_phys_data;
+
+#define ION_IOC_SUNXI_FLUSH_RANGE           5
+#define ION_IOC_SUNXI_PHYS_ADDR             7
+#define ION_IOC_SUNXI_TEE_ADDR              17
+
+#ifdef CONFIG_SUNXI_ION_DEBUG
+extern unsigned long bitmap_size;
+extern unsigned long *sys_user_bitmap;
+#endif
+
+#endif
