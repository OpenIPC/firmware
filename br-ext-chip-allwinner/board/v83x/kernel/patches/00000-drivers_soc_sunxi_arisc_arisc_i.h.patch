diff -drupN a/drivers/soc/sunxi/arisc/arisc_i.h b/drivers/soc/sunxi/arisc/arisc_i.h
--- a/drivers/soc/sunxi/arisc/arisc_i.h	1970-01-01 03:00:00.000000000 +0300
+++ b/drivers/soc/sunxi/arisc/arisc_i.h	2022-06-12 05:28:14.000000000 +0300
@@ -0,0 +1,61 @@
+/*
+ *  arch/arm/mach-sun6i/arisc/arisc_i.h
+ *
+ * Copyright (c) 2012 Allwinner.
+ * 2012-05-01 Written by sunny (sunny@allwinnertech.com).
+ * 2012-10-01 Written by superm (superm@allwinnertech.com).
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ */
+
+#ifndef __ARISC_I_H__
+#define __ARISC_I_H__
+
+#include <asm/atomic.h>
+#include <asm/cacheflush.h>
+#include <linux/dma-mapping.h>
+#include <linux/reboot.h>
+#include <linux/arisc/arisc.h>
+#include <linux/sysfs.h>
+#include <linux/device.h>
+#include <linux/gpio.h>
+#include <linux/pinctrl/consumer.h>
+#include <linux/module.h>
+#include <linux/platform_device.h>
+#include <linux/delay.h>
+#include <linux/clk.h>
+#include <linux/of_address.h>
+#include <linux/of_irq.h>
+#include <linux/of_platform.h>
+#include <linux/power/axp_depend.h>
+#include <linux/sunxi-sid.h>
+#include <linux/arm-smccc.h>
+#include <linux/kobject.h>
+
+#define DRV_NAME    "sunxi-arisc"
+#define DEV_NAME    "sunxi-arisc"
+
+#define DRV_VERSION "3.10"
+
+/* local functions */
+extern int arisc_set_debug_level(unsigned int level);
+extern int arisc_set_uart_baudrate(u32 baudrate);
+extern int arisc_set_dram_crc_paras(unsigned int dram_crc_en, unsigned int dram_crc_srcaddr, unsigned int dram_crc_len);
+
+#ifdef CONFIG_ARM
+int invoke_scp_fn_smc(u32 function_id, u32 arg0, u32 arg1, u32 arg2);
+#endif
+#ifdef CONFIG_ARM64
+int invoke_scp_fn_smc(u64 function_id, u64 arg0, u64 arg1, u64 arg2);
+#endif
+
+#endif  /* __ARISC_I_H__ */
