diff -drupN a/drivers/video/fbdev/sunxi/lcd_fb/panels/kld39501/kld39501.c b/drivers/video/fbdev/sunxi/lcd_fb/panels/kld39501/kld39501.c
--- a/drivers/video/fbdev/sunxi/lcd_fb/panels/kld39501/kld39501.c	1970-01-01 03:00:00.000000000 +0300
+++ b/drivers/video/fbdev/sunxi/lcd_fb/panels/kld39501/kld39501.c	2022-06-12 05:28:14.000000000 +0300
@@ -0,0 +1,149 @@
+/*
+ * drivers/video/fbdev/sunxi/lcd_fb/panels/kld39501/kld39501/kld39501.c
+ *
+ * Copyright (c) 2007-2019 Allwinnertech Co., Ltd.
+ * Author: zhengxiaobin <zhengxiaobin@allwinnertech.com>
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ */
+
+#include "kld39501.h"
+#include "core_api.h"
+
+static void LCD_power_on(u32 sel);
+static void LCD_power_off(u32 sel);
+static void LCD_bl_open(u32 sel);
+static void LCD_bl_close(u32 sel);
+
+static void LCD_panel_init(u32 sel);
+static void LCD_panel_exit(u32 sel);
+
+
+static void LCD_cfg_panel_info(struct panel_extend_para *info)
+{
+	;
+}
+
+static s32 LCD_open_flow(u32 sel)
+{
+	lcd_fb_here;
+	/* open lcd power, and delay 50ms */
+	LCD_OPEN_FUNC(sel, LCD_power_on, 50);
+	/* open lcd power, than delay 200ms */
+	LCD_OPEN_FUNC(sel, LCD_panel_init, 20);
+	/* open lcd backlight, and delay 0ms */
+	LCD_OPEN_FUNC(sel, LCD_bl_open, 0);
+
+	return 0;
+}
+
+static s32 LCD_close_flow(u32 sel)
+{
+	lcd_fb_here;
+	/* close lcd backlight, and delay 0ms */
+	LCD_CLOSE_FUNC(sel, LCD_bl_close, 50);
+	/* open lcd power, than delay 200ms */
+	LCD_CLOSE_FUNC(sel, LCD_panel_exit, 10);
+	/* close lcd power, and delay 500ms */
+	LCD_CLOSE_FUNC(sel, LCD_power_off, 10);
+
+	return 0;
+}
+
+static void LCD_power_on(u32 sel)
+{
+	/* config lcd_power pin to open lcd power0 */
+	lcd_fb_here;
+	sunxi_lcd_power_enable(sel, 0);
+	reset_panel(sel);
+}
+
+static void LCD_power_off(u32 sel)
+{
+	lcd_fb_here;
+	/* config lcd_power pin to close lcd power0 */
+	sunxi_lcd_power_disable(sel, 0);
+}
+
+static void LCD_bl_open(u32 sel)
+{
+	sunxi_lcd_pwm_enable(sel);
+	/* config lcd_bl_en pin to open lcd backlight */
+	sunxi_lcd_backlight_enable(sel);
+	lcd_fb_here;
+}
+
+static void LCD_bl_close(u32 sel)
+{
+	/* config lcd_bl_en pin to close lcd backlight */
+	sunxi_lcd_backlight_disable(sel);
+	sunxi_lcd_pwm_disable(sel);
+	lcd_fb_here;
+}
+
+
+static void LCD_panel_init(u32 sel)
+{
+	lcd_fb_here;
+	init_panel(sel);
+	return;
+}
+
+static void LCD_panel_exit(u32 sel)
+{
+	lcd_fb_here;
+	exit_panel(sel);
+	return;
+}
+
+/* sel: 0:lcd0; 1:lcd1 */
+static s32 LCD_user_defined_func(u32 sel, u32 para1, u32 para2, u32 para3)
+{
+	lcd_fb_here;
+	return 0;
+}
+
+static int lcd_set_layer(unsigned int sel, void *buf, unsigned int len)
+{
+	return panel_dma_transfer(sel, buf, len);
+}
+
+static int lcd_set_var(unsigned int sel, struct fb_info *p_info)
+{
+	return panel_set_var(sel, p_info);
+}
+
+static int lcd_blank(unsigned int sel, unsigned int en)
+{
+	return panel_blank(sel, en);
+}
+
+static int lcd_set_addr_win(unsigned int sel, int x, int y, int width, int height)
+{
+	address(sel, x, y, width, height);
+	return 0;
+}
+
+struct __lcd_panel kld39501_panel = {
+    /* panel driver name, must mach the name of lcd_drv_name in sys_config.fex
+       */
+	.name = "kld39501",
+	.func = {
+		.cfg_panel_info = LCD_cfg_panel_info,
+		.cfg_open_flow = LCD_open_flow,
+		.cfg_close_flow = LCD_close_flow,
+		.lcd_user_defined_func = LCD_user_defined_func,
+		.set_layer = lcd_set_layer,
+		.blank = lcd_blank,
+		.set_var = lcd_set_var,
+		.set_addr_win = lcd_set_addr_win,
+		},
+};
