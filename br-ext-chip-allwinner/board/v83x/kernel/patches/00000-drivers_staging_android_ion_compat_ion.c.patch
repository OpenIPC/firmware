diff -drupN a/drivers/staging/android/ion/compat_ion.c b/drivers/staging/android/ion/compat_ion.c
--- a/drivers/staging/android/ion/compat_ion.c	2018-08-06 17:23:04.000000000 +0300
+++ b/drivers/staging/android/ion/compat_ion.c	2022-06-12 05:28:14.000000000 +0300
@@ -20,6 +20,7 @@
 
 #include "ion.h"
 #include "compat_ion.h"
+#include <asm/cacheflush.h>
 
 /* See drivers/staging/android/uapi/ion.h for the definition of these structs */
 struct compat_ion_allocation_data {
@@ -183,6 +184,36 @@ long compat_ion_ioctl(struct file *filp,
 		return filp->f_op->unlocked_ioctl(filp, ION_IOC_CUSTOM,
 							(unsigned long)data);
 	}
+	case COMPAT_ION_IOC_SUNXI_FLUSH_RANGE:
+	{
+		compat_sunxi_cache_range data;
+
+		if (copy_from_user(&data, (void __user *)arg,
+				sizeof(compat_sunxi_cache_range)))
+			return -EFAULT;
+
+		if (IS_ERR((void *)(unsigned long)data.start) ||
+				IS_ERR((void *)(unsigned long)data.end)) {
+			pr_err("flush 0x%x, size 0x%x fault user virt address!\n",
+			       (u32)data.start, (u32)data.end);
+			return -EFAULT;
+		}
+
+		pr_debug("compat flush range start:%lx end:%lx size:%lx\n",
+			 (unsigned long)(unsigned int)data.start, (unsigned long)(unsigned int)data.end,
+			 (unsigned long)(unsigned int)(data.end - data.start));
+#ifdef CONFIG_ARM64
+		__dma_flush_range((void *)(unsigned long)(unsigned int)data.start,
+			(unsigned long)(unsigned int)(data.end - data.start));
+#else
+		dmac_flush_range((void *)(unsigned long)(unsigned int)data.start,
+			(void *)(unsigned long)(unsigned int)data.end);
+#endif
+
+		if (copy_to_user((void __user *)arg, &data, sizeof(data)))
+			return -EFAULT;
+		break;
+	}
 	case ION_IOC_SHARE:
 	case ION_IOC_MAP:
 	case ION_IOC_IMPORT:
@@ -192,4 +223,6 @@ long compat_ion_ioctl(struct file *filp,
 	default:
 		return -ENOIOCTLCMD;
 	}
+
+	return 0;
 }
