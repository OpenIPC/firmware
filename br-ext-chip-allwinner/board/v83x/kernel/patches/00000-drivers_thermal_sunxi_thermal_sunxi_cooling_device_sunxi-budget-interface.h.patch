diff -drupN a/drivers/thermal/sunxi_thermal/sunxi_cooling_device/sunxi-budget-interface.h b/drivers/thermal/sunxi_thermal/sunxi_cooling_device/sunxi-budget-interface.h
--- a/drivers/thermal/sunxi_thermal/sunxi_cooling_device/sunxi-budget-interface.h	1970-01-01 03:00:00.000000000 +0300
+++ b/drivers/thermal/sunxi_thermal/sunxi_cooling_device/sunxi-budget-interface.h	2022-06-12 05:28:14.000000000 +0300
@@ -0,0 +1,65 @@
+/*
+ *
+ * Copyright(c) 2014-2016 Allwinnertech Co., Ltd.
+ *         http://www.allwinnertech.com
+ *
+ * Author: JiaRui Xiao <xiaojiarui@allwinnertech.com>
+ *
+ * This is the sunxi budget cooling interface  head file.
+ * It offer the cooling interface.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ */
+
+#ifndef SUNXI_BUDGET_INTERFACE_H
+#define SUNXI_BUDGET_INTERFACE_H
+
+int sunxi_cpufreq_update_state(
+	struct sunxi_budget_cooling_device *cooling_device, u32 cluster);
+struct sunxi_budget_cpufreq *
+	sunxi_cpufreq_cooling_register(struct sunxi_budget_cooling_device *bcd);
+void sunxi_cpufreq_cooling_unregister(struct sunxi_budget_cooling_device *bcd);
+int sunxi_cpufreq_get_roomage(
+	struct sunxi_budget_cooling_device *cooling_device,
+	u32 *freq_floor, u32 *freq_roof, u32 cluster);
+int sunxi_cpufreq_set_roomage(
+	struct sunxi_budget_cooling_device *cooling_device,
+	u32 freq_floor, u32 freq_roof, u32 cluster);
+
+#ifdef CONFIG_SUNXI_BUDGET_COOLING_HOTPLUG
+extern int sunxi_hotplug_update_state(
+	struct sunxi_budget_cooling_device *cooling_device, u32 cluster);
+extern struct sunxi_budget_hotplug *
+	sunxi_hotplug_cooling_register(struct sunxi_budget_cooling_device *bcd);
+extern void sunxi_hotplug_cooling_unregister(
+	struct sunxi_budget_cooling_device *bcd);
+int sunxi_hotplug_get_roomage(
+	struct sunxi_budget_cooling_device *cooling_device,
+	u32 *num_floor, u32 *num_roof, u32 cluster);
+int sunxi_hotplug_set_roomage(
+	struct sunxi_budget_cooling_device *cooling_device,
+	u32 num_floor, u32 num_roof, u32 cluster);
+#else
+static inline int sunxi_hotplug_update_state(
+		struct sunxi_budget_cooling_device *cooling_device, u32 cluster)
+{return 0; }
+static inline struct sunxi_budget_hotplug *
+sunxi_hotplug_cooling_register(struct sunxi_budget_cooling_device *bcd)
+{return NULL; }
+static inline void sunxi_hotplug_cooling_unregister(
+	struct sunxi_budget_cooling_device *bcd)
+{}
+int sunxi_hotplug_get_roomage(
+	struct sunxi_budget_cooling_device *cooling_device,
+	u32 *num_floor, u32 *num_roof, u32 cluster)
+{return 0; }
+int sunxi_hotplug_set_roomage(
+	struct sunxi_budget_cooling_device *cooling_device,
+	u32 num_floor, u32 num_roof, u32 cluster)
+{return 0; }
+#endif /* CONFIG_HOTPLUG_CPU */
+
+#endif
