diff -drupN a/drivers/staging/android/ion/ion_priv.h b/drivers/staging/android/ion/ion_priv.h
--- a/drivers/staging/android/ion/ion_priv.h	2018-08-06 17:23:04.000000000 +0300
+++ b/drivers/staging/android/ion/ion_priv.h	2022-06-12 05:28:14.000000000 +0300
@@ -163,6 +163,8 @@ struct ion_handle {
  * @map_kernel		map memory to the kernel
  * @unmap_kernel	unmap memory to the kernel
  * @map_user		map memory to userspace
+ * @phys        get physical address of a buffer (only define on
+ *				physically contiguous heaps)
  *
  * allocate, phys, and map_user return 0 on success, -errno on error.
  * map_dma and map_kernel return pointer on success, ERR_PTR on
@@ -181,6 +183,8 @@ struct ion_heap_ops {
 	int (*map_user)(struct ion_heap *mapper, struct ion_buffer *buffer,
 			struct vm_area_struct *vma);
 	int (*shrink)(struct ion_heap *heap, gfp_t gfp_mask, int nr_to_scan);
+	int (*phys)(struct ion_heap *heap, struct ion_buffer *buffer,
+				 ion_phys_addr_t *addr, size_t *len);
 };
 
 /**
@@ -386,6 +390,10 @@ struct ion_heap *ion_chunk_heap_create(s
 void ion_chunk_heap_destroy(struct ion_heap *);
 struct ion_heap *ion_cma_heap_create(struct ion_platform_heap *);
 void ion_cma_heap_destroy(struct ion_heap *);
+int dma_contiguous_area_maps(struct seq_file *s);
+struct device *get_ion_dev(void);
+
+struct ion_heap *ion_secure_heap_create(struct ion_platform_heap *heap_data);
 
 /**
  * functions for creating and destroying a heap pool -- allows you
