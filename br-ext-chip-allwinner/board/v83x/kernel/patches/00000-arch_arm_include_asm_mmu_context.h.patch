diff -drupN a/arch/arm/include/asm/mmu_context.h b/arch/arm/include/asm/mmu_context.h
--- a/arch/arm/include/asm/mmu_context.h	2018-08-06 17:23:04.000000000 +0300
+++ b/arch/arm/include/asm/mmu_context.h	2022-06-12 05:28:14.000000000 +0300
@@ -143,6 +143,40 @@ switch_mm(struct mm_struct *prev, struct
 		__flush_icache_all();
 
 	if (!cpumask_test_and_set_cpu(cpu, mm_cpumask(next)) || prev != next) {
+#if IS_ENABLED(CONFIG_VMAP_STACK)
+		/*
+		 * Before it call cpu_switch_mm, we must be check the current &
+		 * tsk stack pointer if whether is be mapped. If it is not ready
+		 * we should copy its pud or pmd from init_mm which is
+		 * swapper_pg_dir to next->pgd.
+		 */
+		struct task_struct *_t[] = {
+			current,
+			tsk,
+			NULL,
+		};
+		unsigned int i;
+
+		for (i = 0; _t[i] != NULL; i++) {
+			unsigned long addr =  (unsigned long)task_stack_page(_t[i]);
+			unsigned long end = addr + THREAD_START_SP;
+
+			do {
+				pgd_t *pgd_k = pgd_offset_k(addr);
+				pgd_t *pgd = pgd_offset(next, addr);
+
+				if (!pgd_k || pgd_none(*pgd_k))
+					break;
+
+				if (unlikely(pgd_none(*pgd) || !pgd_present(*pgd)))
+					set_pgd(pgd, *pgd_k);
+
+				/* next section address */
+				addr = pgd_addr_end(addr, end);
+			} while (addr != end);
+		}
+#endif
+
 		check_and_switch_context(next, tsk);
 		if (cache_is_vivt())
 			cpumask_clear_cpu(cpu, mm_cpumask(prev));
