diff -drupN a/drivers/staging/android/ion/ion-ioctl.c b/drivers/staging/android/ion/ion-ioctl.c
--- a/drivers/staging/android/ion/ion-ioctl.c	2018-08-06 17:23:04.000000000 +0300
+++ b/drivers/staging/android/ion/ion-ioctl.c	2022-06-12 05:28:14.000000000 +0300
@@ -21,6 +21,8 @@
 #include "ion.h"
 #include "ion_priv.h"
 #include "compat_ion.h"
+#include "sunxi/sunxi_ion.h"
+#include <asm/cacheflush.h>
 
 union ion_ioctl_arg {
 	struct ion_fd_data fd;
@@ -153,6 +155,32 @@ long ion_ioctl(struct file *filp, unsign
 		ret = ion_sync_for_device(client, data.fd.fd);
 		break;
 	}
+	case ION_IOC_SUNXI_FLUSH_RANGE:
+	{
+		struct sunxi_cache_range data;
+
+		if (copy_from_user(&data, (void __user *)arg,
+				sizeof(struct sunxi_cache_range)))
+			return -EFAULT;
+
+		if (IS_ERR((void *)data.start) || IS_ERR((void *)data.end)) {
+			pr_err("flush 0x%x, end 0x%x fault user virt address!\n",
+			       (u32)data.start, (u32)data.end);
+			return -EFAULT;
+		}
+
+		pr_debug("ion flush_range start:%lx end:%lx size:%lx\n",
+				 data.start, data.end, data.end - data.start);
+#ifdef CONFIG_ARM64
+		__dma_flush_range((void *)data.start, data.end - data.start);
+#else
+		dmac_flush_range((void *)data.start, (void *)data.end);
+#endif
+
+		if (copy_to_user((void __user *)arg, &data, sizeof(data)))
+			return -EFAULT;
+		break;
+	}
 	case ION_IOC_CUSTOM:
 	{
 		if (!dev->custom_ioctl)
