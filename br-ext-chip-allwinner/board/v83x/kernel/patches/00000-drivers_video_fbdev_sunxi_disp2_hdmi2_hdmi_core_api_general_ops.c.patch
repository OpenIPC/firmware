diff -drupN a/drivers/video/fbdev/sunxi/disp2/hdmi2/hdmi_core/api/general_ops.c b/drivers/video/fbdev/sunxi/disp2/hdmi2/hdmi_core/api/general_ops.c
--- a/drivers/video/fbdev/sunxi/disp2/hdmi2/hdmi_core/api/general_ops.c	1970-01-01 03:00:00.000000000 +0300
+++ b/drivers/video/fbdev/sunxi/disp2/hdmi2/hdmi_core/api/general_ops.c	2022-06-12 05:28:14.000000000 +0300
@@ -0,0 +1,50 @@
+/*
+ * Allwinner SoCs hdmi2.0 driver.
+ *
+ * Copyright (C) 2016 Allwinner.
+ *
+ * This file is licensed under the terms of the GNU General Public
+ * License version 2.  This program is licensed "as is" without any
+ * warranty of any kind, whether express or implied.
+ */
+#include "../../config.h"
+
+#include <linux/gpio.h>
+#include <linux/regulator/consumer.h>
+#include <linux/pwm.h>
+#include <asm/div64.h>
+#include <linux/of_irq.h>
+#include <linux/of_address.h>
+#include <linux/of_iommu.h>
+#include <linux/of_device.h>
+#include <linux/of_platform.h>
+#include <linux/of_gpio.h>
+#include <linux/compat.h>
+
+#include "general_ops.h"
+
+u16 concat_bits(u8 bHi, u8 oHi, u8 nHi, u8 bLo, u8 oLo, u8 nLo)
+{
+	return (bit_field(bHi, oHi, nHi) << nLo) | bit_field(bLo, oLo, nLo);
+}
+
+u16 byte_to_word(const u8 hi, const u8 lo)
+{
+	return concat_bits(hi, 0, 8, lo, 0, 8);
+}
+
+u8 bit_field(const u16 data, u8 shift, u8 width)
+{
+	return (data >> shift) & ((((u16) 1) << width) - 1);
+}
+
+u32 byte_to_dword(u8 b3, u8 b2, u8 b1, u8 b0)
+{
+	u32 retval = 0;
+
+	retval |= b0 << (0 * 8);
+	retval |= b1 << (1 * 8);
+	retval |= b2 << (2 * 8);
+	retval |= b3 << (3 * 8);
+	return retval;
+}
