diff -drupN a/arch/arm/Kconfig b/arch/arm/Kconfig
--- a/arch/arm/Kconfig	2018-08-06 17:23:04.000000000 +0300
+++ b/arch/arm/Kconfig	2022-06-12 05:28:14.000000000 +0300
@@ -31,6 +31,7 @@ config ARM
 	select GENERIC_SMP_IDLE_THREAD
 	select GENERIC_STRNCPY_FROM_USER
 	select GENERIC_STRNLEN_USER
+	select ARCH_HAS_SG_CHAIN
 	select HANDLE_DOMAIN_IRQ
 	select HARDIRQS_SW_RESEND
 	select HAVE_ARCH_AUDITSYSCALL if (AEABI && !OABI_COMPAT)
@@ -353,6 +354,17 @@ config ARM_SINGLE_ARMV7M
 	select SPARSE_IRQ
 	select USE_OF
 
+config ARCH_SUNXI
+	bool "Allwinner Ltd. SUNXI family"
+	select NEED_MACH_IO_H
+	select NEED_MACH_MEMORY_H
+	select ARCH_HAVE_CUSTOM_GPIO_H
+	select ARCH_HAS_CPUFREQ
+	select ARM_HAS_SG_CHAIN
+	select SUN4I_TIMER
+	help
+	  This enables support for systems based on sunxi soc.
+
 config ARCH_GEMINI
 	bool "Cortina Systems Gemini"
 	select CLKSRC_MMIO
@@ -1640,6 +1652,53 @@ config OABI_COMPAT
 	  UNPREDICTABLE (in fact it can be predicted that it won't work
 	  at all). If in doubt say N.
 
+
+config SCHED_DCMP
+	bool "Dual Cluster symmetric support"
+	depends on ARCH_SUN8IW6 || ARCH_SUN8IW9 || ARCH_SUN8IW17
+	default n
+	help
+	  Allows the Dual cluster symmetric
+
+config SCHED_HMP_DCMP
+	bool "(EXPERIMENTAL) Heterogenous multiprocessor scheduling for DCMP"
+	depends on SCHED_HMP && SCHED_DCMP
+	help
+	  Experimental scheduler optimizations for heterogeneous platforms
+	  for DCMP
+
+config SCHED_SMP_DCMP
+	bool "(EXPERIMENTAL) SMP scheduling for DCMP"
+	depends on !SCHED_HMP && SCHED_DCMP
+	help
+	  Experimental SMP scheduling for DCMP
+
+config CLUSTER0_CPU_MASK
+	string "Cluster0 mask for Dual Cluster"
+	depends on SCHED_SMP_DCMP
+	help
+	  Leave empty to use device tree information.
+	  Specify the cpuids of the fast CPUs in the system as a list string,
+	  e.g. cpuid 0+1 should be specified as 0-1.
+config CLUSTER1_CPU_MASK
+	string "Cluster1 mask for Dual Cluster"
+	depends on SCHED_SMP_DCMP
+	help
+	  Leave empty to use device tree information.
+	  Specify the cpuids of the fast CPUs in the system as a list string,
+	  e.g. cpuid 0+1 should be specified as 0-1.
+
+config ARM_STACK_ORDER
+	int "Kernal stack order"
+	range 0 4
+	default "1"
+	help
+	  This option let us to select page numbers for kernel stack size in
+	  the system. At default stack size is 8K, 1-order page. But if you
+	  want to use less memory for each kernel stack int the system, you
+	  can change the order number. Range is 0 to 4.
+
+
 config ARCH_HAS_HOLES_MEMORYMODEL
 	bool
 
@@ -1836,6 +1895,15 @@ config XEN
 	help
 	  Say Y if you want to run Linux in a Virtual Machine on Xen on ARM.
 
+config ARM_FLUSH_CONSOLE_ON_RESTART
+	bool "Force flush the console on restart"
+	help
+	  If the console is locked while the system is rebooted, the messages
+	  in the temporary logbuffer would not have propogated to all the
+	  console drivers. This option forces the console lock to be
+	  released if it failed to be acquired, which will cause all the
+	  pending messages to be flushed.
+
 endmenu
 
 menu "Boot options"
@@ -1864,6 +1932,21 @@ config DEPRECATED_PARAM_STRUCT
 	  This was deprecated in 2001 and announced to live on for 5 years.
 	  Some old boot loaders still use this way.
 
+config BUILD_ARM_APPENDED_DTB_IMAGE
+	bool "Build a concatenated zImage/dtb by default"
+	depends on OF
+	help
+	  Enabling this option will cause a concatenated zImage and list of
+	  DTBs to be built by default (instead of a standalone zImage.)
+	  The image will built in arch/arm/boot/zImage-dtb
+
+config BUILD_ARM_APPENDED_DTB_IMAGE_NAMES
+	string "Default dtb names"
+	depends on BUILD_ARM_APPENDED_DTB_IMAGE
+	help
+	  Space separated list of names of dtbs to append when
+	  building a concatenated zImage-dtb.
+
 # Compressed boot loader in ROM.  Yes, we really want to ask about
 # TEXT and BSS so we preserve their values in the config files.
 config ZBOOT_ROM_TEXT
