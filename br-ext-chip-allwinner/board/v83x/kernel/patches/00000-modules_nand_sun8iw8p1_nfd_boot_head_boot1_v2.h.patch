diff -drupN a/modules/nand/sun8iw8p1/nfd/boot_head/boot1_v2.h b/modules/nand/sun8iw8p1/nfd/boot_head/boot1_v2.h
--- a/modules/nand/sun8iw8p1/nfd/boot_head/boot1_v2.h	1970-01-01 03:00:00.000000000 +0300
+++ b/modules/nand/sun8iw8p1/nfd/boot_head/boot1_v2.h	2022-06-12 05:28:14.000000000 +0300
@@ -0,0 +1,67 @@
+/*
+ * Copyright (c) 2007-2019 Allwinnertech Co., Ltd.
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ */
+#ifndef __boo1_h
+#define __boo1_h
+
+
+#include "boot0_v2.h"
+
+typedef struct _boot_core_para_t {
+	unsigned int  user_set_clock;                 /* ����Ƶ�� M��λ*/
+	unsigned int  user_set_core_vol;              /* ���ĵ�ѹ mV��λ*/
+	unsigned int  vol_threshold;                  /* �������޵�ѹ*/
+}
+boot_core_para_t;
+/******************************************************************************/
+/*                              file head of Boot1                            */
+/******************************************************************************/
+typedef struct _boot1_private_head_t {
+	unsigned int                dram_para[32];
+	int							run_clock;				/* Mhz*/
+	int							run_core_vol;			/* mV*/
+	int							uart_port;              /* UART���������*/
+	normal_gpio_cfg             uart_gpio[2];           /* UART������(���Դ�ӡ��)GPIO��Ϣ*/
+	int							twi_port;               /* TWI���������*/
+	normal_gpio_cfg             twi_gpio[2];            /* TWI������GPIO��Ϣ�����ڿ���TWI*/
+	int		                    work_mode;              /* ����ģʽ*/
+	int                         storage_type;           /* �洢��������  0��nand   1��sdcard    2: spinor*/
+	normal_gpio_cfg             nand_gpio[32];          /* nand GPIO��Ϣ*/
+	char						nand_spare_data[256];	/* nand ������Ϣ*/
+	normal_gpio_cfg             sdcard_gpio[32];		/* sdcard GPIO��Ϣ*/
+	char             			sdcard_spare_data[256];	/* sdcard ������Ϣ*/
+	int							reserved[6];			/* ��������λ, 256bytes align*/
+} boot1_private_head_t;
+
+typedef struct _Boot_file_head {
+	unsigned int  jump_instruction;   /* one intruction jumping to real code*/
+	unsigned char magic[8];  /* ="u-boot"*/
+	unsigned int  check_sum;          /* generated by PC*/
+	unsigned int  align_size;		  /* align size in byte*/
+	unsigned int  length;             /* the size of all file*/
+	unsigned int  uboot_length;       /* the size of uboot*/
+	unsigned char version[8];         /* uboot version*/
+	unsigned char platform[8];        /* platform information*/
+	int           reserved[1];        /*stamp space, 16bytes align*/
+} boot_file_head_t;
+
+
+typedef struct _boot1_file_head_t {
+	boot_file_head_t      boot_head;
+	boot1_private_head_t  prvt_head;
+} boot1_file_head_t;
+
+
+#endif     /*  ifndef __boo1_h*/
+
+/* end of boo1.h */
