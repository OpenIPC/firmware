diff -drupN a/drivers/staging/android/ion/ion_heap.c b/drivers/staging/android/ion/ion_heap.c
--- a/drivers/staging/android/ion/ion_heap.c	2018-08-06 17:23:04.000000000 +0300
+++ b/drivers/staging/android/ion/ion_heap.c	2022-06-12 05:28:14.000000000 +0300
@@ -78,10 +78,17 @@ int ion_heap_map_user(struct ion_heap *h
 	int i;
 	int ret;
 
+#ifdef CONFIG_ARCH_SUN8IW19
+	vma->vm_flags |= VM_MIXEDMAP | VM_DONTEXPAND |
+						VM_DONTDUMP;
+#endif
 	for_each_sg(table->sgl, sg, table->nents, i) {
 		struct page *page = sg_page(sg);
 		unsigned long remainder = vma->vm_end - addr;
 		unsigned long len = sg->length;
+#ifdef CONFIG_ARCH_SUN8IW19
+		int j;
+#endif
 
 		if (offset >= sg->length) {
 			offset -= sg->length;
@@ -90,13 +97,27 @@ int ion_heap_map_user(struct ion_heap *h
 			page += offset / PAGE_SIZE;
 			len = sg->length - offset;
 			offset = 0;
+#ifdef CONFIG_ARCH_SUN8IW19
+		} else {
+			len = sg->length;
+#endif
 		}
 		len = min(len, remainder);
+#ifdef CONFIG_ARCH_SUN8IW19
+		for (j = 0; j < PAGE_ALIGN(len) / PAGE_SIZE; j++) {
+			ret = vm_insert_page(vma, (unsigned long)addr, page);
+			addr += PAGE_SIZE;
+			page++;
+		}
+#else
 		ret = remap_pfn_range(vma, addr, page_to_pfn(page), len,
 				      vma->vm_page_prot);
+#endif
 		if (ret)
 			return ret;
+#ifndef CONFIG_ARCH_SUN8IW19
 		addr += len;
+#endif
 		if (addr >= vma->vm_end)
 			return 0;
 	}
@@ -332,9 +353,16 @@ struct ion_heap *ion_heap_create(struct
 	case ION_HEAP_TYPE_CHUNK:
 		heap = ion_chunk_heap_create(heap_data);
 		break;
+#ifdef CONFIG_CMA
 	case ION_HEAP_TYPE_DMA:
 		heap = ion_cma_heap_create(heap_data);
 		break;
+#endif
+#ifdef CONFIG_TEE
+	case ION_HEAP_TYPE_SECURE:
+		heap = ion_secure_heap_create(heap_data);
+		break;
+#endif
 	default:
 		pr_err("%s: Invalid heap type %d\n", __func__,
 		       heap_data->type);
@@ -372,9 +400,11 @@ void ion_heap_destroy(struct ion_heap *h
 	case ION_HEAP_TYPE_CHUNK:
 		ion_chunk_heap_destroy(heap);
 		break;
+#ifdef CONFIG_CMA
 	case ION_HEAP_TYPE_DMA:
 		ion_cma_heap_destroy(heap);
 		break;
+#endif
 	default:
 		pr_err("%s: Invalid heap type %d\n", __func__,
 		       heap->type);
