diff -drupN a/arch/mips/xburst/soc-x1800/include/soc/cpm.h b/arch/mips/xburst/soc-x1800/include/soc/cpm.h
--- a/arch/mips/xburst/soc-x1800/include/soc/cpm.h	1970-01-01 03:00:00.000000000 +0300
+++ b/arch/mips/xburst/soc-x1800/include/soc/cpm.h	2022-06-09 05:02:27.000000000 +0300
@@ -0,0 +1,82 @@
+/*
+ * SOC CPM register definition.
+ *
+ * CPM (Clock reset and Power control Management)
+ *
+ * Copyright (C) 2010 Ingenic Semiconductor Co., Ltd.
+ */
+
+#ifndef __SOC_CPM_H__
+#define __SOC_CPM_H__
+
+#define CPM_CPCCR	(0x00)
+#define CPM_CPCSR	(0xd4)
+
+#define CPM_DDRCDR	(0x2c)
+#define CPM_I2SCDR	(0x60)
+#define CPM_I2SCDR1	(0x70)
+#define CPM_LPCDR	(0x64)
+#define CPM_MSC0CDR	(0x68)
+#define CPM_MSC1CDR	(0xa4)
+#define CPM_USBCDR	(0x50)
+#define CPM_MACCDR	(0x54)
+#define CPM_SFCCDR	(0x74)
+#define CPM_CIMCDR	(0x7c)
+#define CPM_PCMCDR	(0x84)
+#define CPM_PCMCDR1	(0xe0)
+#define CPM_MPHYC	(0xe8)
+#define CPM_ISPCDR	(0x80)
+
+#define CPM_INTR	(0xb0)
+#define CPM_INTRE	(0xb4)
+#define CPM_DRCG	(0xd0)
+#define CPM_CPSPPR	(0x38)
+#define CPM_CPPSR	(0x34)
+
+#define CPM_USBPCR	(0x3c)
+#define CPM_USBRDT	(0x40)
+#define CPM_USBVBFIL	(0x44)
+#define CPM_USBPCR1	(0x48)
+
+#define CPM_CPAPCR	(0x10)
+#define CPM_CPMPCR	(0x14)
+
+#define CPM_LCR		(0x04)
+#define CPM_PSWC0ST     (0x90)
+#define CPM_PSWC1ST     (0x94)
+#define CPM_PSWC2ST     (0x98)
+#define CPM_PSWC3ST     (0x9c)
+#define CPM_CLKGR	(0x20)
+#define CPM_CLKGR1	(0x28)
+#define CPM_MESTSEL	(0xec)
+#define CPM_SRBC	(0xc4)
+#define CPM_ERNG	(0xd8)
+#define CPM_RNG	        (0xdc)
+#define CPM_SLBC	(0xc8)
+#define CPM_SLPC	(0xcc)
+#define CPM_OPCR	(0x24)
+#define CPM_RSR		(0x08)
+
+#define LCR_LPM_MASK		(0x3)
+#define LCR_LPM_SLEEP		(0x1)
+
+#ifndef BIT
+#define BIT(nr)  (1UL << nr)
+#endif
+
+/*Oscillator and Power Control Register*/
+#define OPCR_IDLE              BIT(31)
+#define OPCR_USB_SPENDN                BIT(7)
+#define OPCR_USB_SPENDN1       BIT(6)
+#define OPCR_PD                        BIT(3)
+#define OPCR_ERCS              BIT(2)
+
+/*Soft Reset and Bus Control Register*/
+#define SRBC_OTG_SR		BIT(12)
+
+#define cpm_inl(off)		inl(CPM_IOBASE + (off))
+#define cpm_outl(val,off)	outl(val,CPM_IOBASE + (off))
+#define cpm_clear_bit(val,off)	do{cpm_outl((cpm_inl(off) & ~(1<<(val))),off);}while(0)
+#define cpm_set_bit(val,off)	do{cpm_outl((cpm_inl(off) |  (1<<val)),off);}while(0)
+#define cpm_test_bit(val,off)	(cpm_inl(off) & (0x1<<val))
+#endif
