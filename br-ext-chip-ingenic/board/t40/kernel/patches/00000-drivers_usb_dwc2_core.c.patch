diff -drupN a/drivers/usb/dwc2/core.c b/drivers/usb/dwc2/core.c
--- a/drivers/usb/dwc2/core.c	2017-10-21 18:09:07.000000000 +0300
+++ b/drivers/usb/dwc2/core.c	2022-06-09 05:02:34.000000000 +0300
@@ -485,13 +485,18 @@ static int dwc2_core_reset(struct dwc2_h
 {
 	u32 greset;
 	int count = 0;
-	u32 gusbcfg;
-
+	bool wait_for_host_mode = false;
+	u32 gotgctl = dwc2_readl(hsotg->regs + GOTGCTL);
+	u32 gusbcfg = dwc2_readl(hsotg->regs + GUSBCFG);
 	dev_vdbg(hsotg->dev, "%s()\n", __func__);
 
+	if (!(gotgctl & GOTGCTL_CONID_B) ||(gusbcfg & GUSBCFG_FORCEHOSTMODE)) {
+		wait_for_host_mode = true;
+	}
+
 	/* Wait for AHB master IDLE state */
 	do {
-		usleep_range(20000, 40000);
+		udelay(1);
 		greset = dwc2_readl(hsotg->regs + GRSTCTL);
 		if (++count > 50) {
 			dev_warn(hsotg->dev,
@@ -506,7 +511,7 @@ static int dwc2_core_reset(struct dwc2_h
 	greset |= GRSTCTL_CSFTRST;
 	dwc2_writel(greset, hsotg->regs + GRSTCTL);
 	do {
-		usleep_range(20000, 40000);
+		udelay(1);
 		greset = dwc2_readl(hsotg->regs + GRSTCTL);
 		if (++count > 50) {
 			dev_warn(hsotg->dev,
@@ -537,8 +542,17 @@ static int dwc2_core_reset(struct dwc2_h
 	 * NOTE: This long sleep is _very_ important, otherwise the core will
 	 * not stay in host mode after a connector ID change!
 	 */
-	usleep_range(150000, 200000);
-
+	count = 0;
+	if(wait_for_host_mode){
+		do{
+			if (++count > 110) {
+				dev_warn(hsotg->dev, "%s: Couldn't set host mode\n",
+					 __func__);
+				break;
+			}
+			usleep_range(1000, 2000);
+		}while(!dwc2_is_host_mode(hsotg));
+	}
 	return 0;
 }
 
@@ -769,7 +783,7 @@ static void dwc2_gusbcfg_init(struct dwc
  * @select_phy: If true then also set the Phy type
  * @irq:        If >= 0, the irq to register
  */
-int dwc2_core_init(struct dwc2_hsotg *hsotg, bool select_phy, int irq)
+int dwc2_core_init(struct dwc2_hsotg *hsotg, bool select_phy, int irq, bool initial_setup)
 {
 	u32 usbcfg, otgctl;
 	int retval;
@@ -792,13 +806,14 @@ int dwc2_core_init(struct dwc2_hsotg *hs
 	dwc2_writel(usbcfg, hsotg->regs + GUSBCFG);
 
 	/* Reset the Controller */
-	retval = dwc2_core_reset(hsotg);
-	if (retval) {
-		dev_err(hsotg->dev, "%s(): Reset failed, aborting\n",
-				__func__);
-		return retval;
+	if(!initial_setup){
+		retval = dwc2_core_reset(hsotg);
+		if (retval) {
+			dev_err(hsotg->dev, "%s(): Reset failed, aborting\n",
+					__func__);
+			return retval;
+		}
 	}
-
 	/*
 	 * This needs to happen in FS mode before any other programming occurs
 	 */
@@ -835,6 +850,8 @@ int dwc2_core_init(struct dwc2_hsotg *hs
 	if (dwc2_is_host_mode(hsotg)) {
 		dev_dbg(hsotg->dev, "Host Mode\n");
 		hsotg->op_state = OTG_STATE_A_HOST;
+		otgctl |= GOTGCTL_VBVALIDOVEN | GOTGCTL_VBVALIDOVVAL;
+		dwc2_writel(otgctl, hsotg->regs + GOTGCTL);
 	} else {
 		dev_dbg(hsotg->dev, "Device Mode\n");
 		hsotg->op_state = OTG_STATE_B_PERIPHERAL;
@@ -1029,6 +1046,7 @@ void dwc2_core_host_init(struct dwc2_hso
 
 	/* Initialize Host Configuration Register */
 	dwc2_init_fs_ls_pclk_sel(hsotg);
+
 	if (hsotg->core_params->speed == DWC2_SPEED_PARAM_FULL) {
 		hcfg = dwc2_readl(hsotg->regs + HCFG);
 		hcfg |= HCFG_FSLSSUPP;
@@ -1131,6 +1149,7 @@ void dwc2_core_host_init(struct dwc2_hso
 			hprt0 |= HPRT0_PWR;
 			dwc2_writel(hprt0, hsotg->regs + HPRT0);
 		}
+		usb_phy_vbus_on(hsotg->uphy);
 	}
 
 	dwc2_enable_host_interrupts(hsotg);
@@ -2172,6 +2191,10 @@ void dwc2_dump_host_registers(struct dwc
 	u32 __iomem *addr;
 	int i;
 
+	if (!(dwc2_readl(hsotg->regs + GINTSTS) & GINTSTS_CURMODE_HOST)) {
+		dev_dbg(hsotg->dev, "%s but current mode is device\n", __func__);
+		return;
+	}
 	dev_dbg(hsotg->dev, "Host Global Registers\n");
 	addr = hsotg->regs + HCFG;
 	dev_dbg(hsotg->dev, "HCFG	 @0x%08lX : 0x%08X\n",
@@ -3052,6 +3075,51 @@ void dwc2_set_parameters(struct dwc2_hso
 	dwc2_set_param_hibernation(hsotg, params->hibernation);
 }
 
+/*
+ * Gets host hardware parameters. Forces host mode to get parameters
+ */
+static void dwc2_get_host_hwparams(struct dwc2_hsotg *hsotg)
+{
+	struct dwc2_hw_params *hw = &hsotg->hw_params;
+	u32 gnptxfsiz;
+	u32 hptxfsiz;
+	u32 gusbcfg;
+	bool forced;
+	int count = 0;
+
+/*when device mode, return */
+	if (hsotg->dr_mode == USB_DR_MODE_PERIPHERAL)
+		return;
+
+/*set force host mode , and wait for host mode*/
+	gusbcfg = dwc2_readl(hsotg->regs + GUSBCFG);
+	gusbcfg |= GUSBCFG_FORCEHOSTMODE;
+	dwc2_writel(gusbcfg, hsotg->regs + GUSBCFG);
+
+	do{
+		if (++count > 110) {
+			dev_warn(hsotg->dev, "%s: Couldn't set host mode\n",
+				 __func__);
+			break;
+		}
+		usleep_range(1000, 2000);
+	}while(!dwc2_is_host_mode(hsotg));
+
+	gnptxfsiz = dwc2_readl(hsotg->regs + GNPTXFSIZ);
+	hptxfsiz = dwc2_readl(hsotg->regs + HPTXFSIZ);
+
+/*clear force host mode , don't wait*/
+	gusbcfg = dwc2_readl(hsotg->regs + GUSBCFG);
+	gusbcfg &= ~GUSBCFG_FORCEHOSTMODE;
+	dwc2_writel(gusbcfg, hsotg->regs + GUSBCFG);
+
+	hw->host_nperio_tx_fifo_size = (gnptxfsiz & FIFOSIZE_DEPTH_MASK) >>
+				       FIFOSIZE_DEPTH_SHIFT;
+	hw->host_perio_tx_fifo_size = (hptxfsiz & FIFOSIZE_DEPTH_MASK) >>
+				      FIFOSIZE_DEPTH_SHIFT;
+}
+
+
 /**
  * During device initialization, read various hardware configuration
  * registers and interpret the contents.
@@ -3061,7 +3129,7 @@ int dwc2_get_hwparams(struct dwc2_hsotg
 	struct dwc2_hw_params *hw = &hsotg->hw_params;
 	unsigned width;
 	u32 hwcfg1, hwcfg2, hwcfg3, hwcfg4;
-	u32 hptxfsiz, grxfsiz, gnptxfsiz;
+	u32 grxfsiz;
 	u32 gusbcfg;
 
 	/*
@@ -3095,19 +3163,7 @@ int dwc2_get_hwparams(struct dwc2_hsotg
 	dev_dbg(hsotg->dev, "grxfsiz=%08x\n", grxfsiz);
 
 	/* Force host mode to get HPTXFSIZ / GNPTXFSIZ exact power on value */
-	gusbcfg = dwc2_readl(hsotg->regs + GUSBCFG);
-	gusbcfg |= GUSBCFG_FORCEHOSTMODE;
-	dwc2_writel(gusbcfg, hsotg->regs + GUSBCFG);
-	usleep_range(100000, 150000);
-
-	gnptxfsiz = dwc2_readl(hsotg->regs + GNPTXFSIZ);
-	hptxfsiz = dwc2_readl(hsotg->regs + HPTXFSIZ);
-	dev_dbg(hsotg->dev, "gnptxfsiz=%08x\n", gnptxfsiz);
-	dev_dbg(hsotg->dev, "hptxfsiz=%08x\n", hptxfsiz);
-	gusbcfg = dwc2_readl(hsotg->regs + GUSBCFG);
-	gusbcfg &= ~GUSBCFG_FORCEHOSTMODE;
-	dwc2_writel(gusbcfg, hsotg->regs + GUSBCFG);
-	usleep_range(100000, 150000);
+	dwc2_get_host_hwparams(hsotg);
 
 	/* hwcfg2 */
 	hw->op_mode = (hwcfg2 & GHWCFG2_OP_MODE_MASK) >>
@@ -3163,10 +3219,6 @@ int dwc2_get_hwparams(struct dwc2_hsotg
 	/* fifo sizes */
 	hw->host_rx_fifo_size = (grxfsiz & GRXFSIZ_DEPTH_MASK) >>
 				GRXFSIZ_DEPTH_SHIFT;
-	hw->host_nperio_tx_fifo_size = (gnptxfsiz & FIFOSIZE_DEPTH_MASK) >>
-				       FIFOSIZE_DEPTH_SHIFT;
-	hw->host_perio_tx_fifo_size = (hptxfsiz & FIFOSIZE_DEPTH_MASK) >>
-				      FIFOSIZE_DEPTH_SHIFT;
 
 	dev_dbg(hsotg->dev, "Detected values from hardware:\n");
 	dev_dbg(hsotg->dev, "  op_mode=%d\n",
