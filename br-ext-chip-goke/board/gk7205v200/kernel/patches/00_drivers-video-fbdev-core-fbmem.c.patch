--- linux-4.9.37/drivers/video/fbdev/core/fbmem.c	2017-07-12 16:42:41.000000000 +0300
+++ linux-4.9.y/drivers/video/fbdev/core/fbmem.c	2021-06-07 13:01:34.000000000 +0300
@@ -32,6 +32,7 @@
 #include <linux/device.h>
 #include <linux/efi.h>
 #include <linux/fb.h>
+#include <linux/dma-buf.h>
 
 #include <asm/fb.h>
 
@@ -1083,7 +1084,24 @@
  	return ret;
 }
 EXPORT_SYMBOL(fb_blank);
+#ifdef CONFIG_ARCH_GOKE
+#ifdef CONFIG_DMA_SHARED_BUFFER
+int
+fb_get_dmabuf(struct fb_info *info, int flags)
+{
+	struct dma_buf *dmabuf;
+
+	if (info->fbops->fb_dmabuf_export == NULL)
+		return -ENOTTY;
+
+	dmabuf = info->fbops->fb_dmabuf_export(info);
+	if (IS_ERR(dmabuf))
+		return PTR_ERR(dmabuf);
 
+	return dma_buf_fd(dmabuf, flags);
+}
+#endif
+#endif /* CONFIG_ARCH_GOKE */
 static long do_fb_ioctl(struct fb_info *info, unsigned int cmd,
 			unsigned long arg)
 {
@@ -1094,6 +1112,9 @@
 	struct fb_cmap cmap_from;
 	struct fb_cmap_user cmap;
 	struct fb_event event;
+#if defined(CONFIG_ARCH_GOKE) && defined(CONFIG_DMA_SHARED_BUFFER)
+	struct fb_dmabuf_export dmaexp;
+#endif
 	void __user *argp = (void __user *)arg;
 	long ret = 0;
 
@@ -1211,6 +1232,23 @@
 		unlock_fb_info(info);
 		console_unlock();
 		break;
+#if defined(CONFIG_ARCH_GOKE) && defined(CONFIG_DMA_SHARED_BUFFER)
+	case FBIOGET_DMABUF:
+		if (copy_from_user(&dmaexp, argp, sizeof(dmaexp)))
+			return -EFAULT;
+
+		if (!lock_fb_info(info))
+			return -ENODEV;
+		dmaexp.fd = fb_get_dmabuf(info, dmaexp.flags);
+		unlock_fb_info(info);
+
+		if (dmaexp.fd < 0)
+			return dmaexp.fd;
+
+		ret = copy_to_user(argp, &dmaexp, sizeof(dmaexp))
+		    ? -EFAULT : 0;
+		break;
+#endif /* CONFIG_ARCH_GOKE */
 	default:
 		if (!lock_fb_info(info))
 			return -ENODEV;
